#
# Be sure to run `pod lib lint SwaggerClient.podspec' to ensure this is a
# valid spec and remove all comments before submitting the spec.
#
# Any lines starting with a # are optional, but encouraged
#
# To learn more about a Podspec see http://guides.cocoapods.org/syntax/podspec.html
#

Pod::Spec.new do |s|
    s.name             = "SwaggerClient"
    s.version          = "1.0.0"

    s.summary          = "Fincra Developer Api"
    s.description      = <<-DESC
                         * * *\n\nOur API reference will introduce you to all the basic information you need to better understand and integrate with our products.\n\nWith our API you can access endpoints that enable you to perform actions such as payouts, currency conversion, creating and maintaining a virtual account for your self/customers, depending on your scope.\n\nIn summary, our API gives you access to pretty much all and more features you can use on our dashboard and lets you extend them for use in your application.\n\n### APIs available are:\n\n*   **Virtual Account**: Create a USD,EUR, GBP &amp; NGN bank account/IBAN and receive payments in a country’s local currency from any part of the world.\n*   **Sub-Account**: Create and manage accounts for your customers.\n*   **Beneficiaries**: Manage frequent recipients.\n*   **Quote**: Get real-time rates for payouts to all supported currencies.\n*   **Conversion**: Allows you to convert from one currency to another.\n*   **Payout**: Make seamless cross-currency and single-currency payouts through our API.\n*   **Transactions**: Manage all transactionntransactionss\n*   **Wallets**: Manage multi-currency wallet balances.\n    \n\nWhether you’re a financial institution, a fintech, or a global business, you can integrate our APIs into your existing platform .\n\n* * *\n\n# Environment URLS\n\nThe Fincra API is available in both Production as well as Sandbox environment. Please find the corresponding URLs below\n\n##### Sandbox\n\n{{host}} : [https://sandboxapi.fincra.com](https://sandboxapi.fincra.com)\n\n* * *\n\n# Authentication\n\nFincra authenticates your API requests using your account’s API key. If you do not include your key when making an API request or use one that is incorrect, Fincra will return an error.\n\n##### Obtaining your API Keys:\n\nYour API key is available on your dashboard. On the web application, navigate to `Settings -&gt; API keys` to view and copy your API key.\n\n##### Authenticating Requests:\n\nTo hit our endpoints, you&#39;ll need to add to your header, `-H \&quot;`**`api-key`**`: your_api_key\&quot;`.\n\n##### Obtaining Business ID:\n\nYou would find that a lot of the endpoint requires the ID of your business. To get the business ID, click &lt;a href=\&quot;https://documenter.getpostman.com/view/10721039/Tz5m7zMw#173cf362-e111-458f-86ee-801489eaef8d\&quot;&gt;here&lt;/a&gt; or send a GET request to this endpoint \&quot;{{host}}/profile/business/me\&quot;\n\nThe endpoint returns a business object and the ID of the object is your business ID.\n\n* * *\n\n# Versioning\n\nWhen backward-incompatible changes are made to the API, a new, dated version is released. Minor updates and bug fixes are occasionally released without incrementing the version number\n\nIt is important to note that we are continually improving and adding new features to improve our services.\n\n* * *\n\n# Deprecation policy\n\nAPI deprecation is used to inform you that some APIs are no longer recommended for use in your applications. The Fincra team is trying to keep the API as stable as possible, but sometimes APIs must be deprecated due to, for example, critical security issues, or new and better alternatives.\n\nBased on a careful analysis, the following deprecation policy has been adopted in Fincra:\n\n*   The functionality of the deprecated API is available for 2 releases and are therefore only removed after 2 releases.\n*   During the 2 version releases, the functionality of the deprecated API may also be removed immediately for security reasons or as an unavoidable part of the platform evolution.\n*   Alternatives must be described within the reference of the deprecated API, if possible.\n*   All version changes are considered 1 release for purposes of the deprecation policy.\n    \n\n* * *\n\n# API rate limiting\n\nTo make our APIs more scalable we have integrated rate limiting on each of our APIs. The frequency in http requests allowed on our APIs is 100 requests over any 1-minute interval.\n\n* * *\n\n# Webhook\n\nWe use webhooks to provide you the ability to receive real-time notifications when an event happens on your account. These events could range from a successful transaction to a failed transaction.\n\nExamples of events that you could be notified on include:\n\n*   When you receive a settlement transaction.\n*   When you performed a successful payout transaction.\n    \n\nYou could use webhooks to\n\n*   Update your database when the status of a pending payment is updated to successful.\n*   Email a customer when payment is successful or fails.\n    \n\nIn order to receive these notifications, you need the following:\n\n*   An endpoint on your server that will be called by us to send you notifications\n*   Webhook enabled on your Fincra dashboard.\n    \n\n### How to enable webhooks on your dashboard\n\nTo enable webhook, kindly follow the steps below:\n\n*   Log into your Fincra dashboard.\n*   Click on settings icon on the left to access the Settings page.\n*   Click **API key &amp; Webhook** tab of the **Settings** page.\n*   Paste the url of your server endpoint in the appropriate callback URL field, save and you are good to go.\n    \n\n### Sample Webhook Response Data\n\nThe data sent to the webhook url differs depending on the type of transaction carried out and the type of transactions available include Payout, Settlement, Collection and Conversion.\n\nKindly find below sample webhook responses:\n\n**Response for successful virtual account approval**\n\n``` json\n{\n  \&quot;event\&quot;: \&quot;virtualaccount.approved\&quot;,\n  \&quot;data\&quot;: {\n    \&quot;id\&quot;: \&quot;61769013cff5311964f3f6cf\&quot;,\n    \&quot;business\&quot;: \&quot;61768caacff5315c34f3f6a3\&quot;,\n    \&quot;isSubAccount\&quot;: true,\n    \&quot;currency\&quot;: \&quot;GBP\&quot;,\n    \&quot;currencyType\&quot;: \&quot;fiat\&quot;,\n    \&quot;status\&quot;: \&quot;approved\&quot;,\n    \&quot;accountType\&quot;: \&quot;individual\&quot;,\n    \&quot;accountInformation\&quot;: {\n      \&quot;accountNumber\&quot;: \&quot;GBXXCLJU04130780008933\&quot;,\n      \&quot;bankName\&quot;: null,\n      \&quot;bankCode\&quot;: \&quot;CLJU\&quot;,\n      \&quot;countryCode\&quot;: \&quot;GB\&quot;,\n      \&quot;otherInfo\&quot;: {\n        \&quot;iban\&quot;: \&quot;GBXXCLJU04130780008933\&quot;,\n        \&quot;accountNumber\&quot;: \&quot;80008933\&quot;,\n        \&quot;checkNumber\&quot;: \&quot;XX\&quot;,\n        \&quot;sortCode\&quot;: \&quot;041307\&quot;,\n        \&quot;bankSwiftCode\&quot;: null\n      }\n    },\n    \&quot;accountOpeningFee\&quot;: 0,\n    \&quot;isPermanent\&quot;: true,\n    \&quot;createdAt\&quot;: \&quot;2021-10-25T11:08:03.442Z\&quot;,\n    \&quot;updatedAt\&quot;: \&quot;2021-10-25T11:21:32.861Z\&quot;\n  }\n}\n\n```\n\n**Response for declined virtual account**\n\n``` json\n{\n  {\n  \&quot;event\&quot;: \&quot;virtualaccount.declined\&quot;,\n  \&quot;data\&quot;: {\n    \&quot;id\&quot;: \&quot;6176a0cfcff53106ebf3f77e\&quot;,\n    \&quot;business\&quot;: \&quot;61768caacff5315c34f3f6a3\&quot;,\n    \&quot;isSubAccount\&quot;: true,\n    \&quot;currency\&quot;: \&quot;EUR\&quot;,\n    \&quot;currencyType\&quot;: \&quot;fiat\&quot;,\n    \&quot;status\&quot;: \&quot;declined\&quot;,\n    \&quot;accountType\&quot;: \&quot;individual\&quot;,\n    \&quot;reason\&quot;: \&quot;declined for compliance reason\&quot;,\n    \&quot;accountOpeningFee\&quot;: 0,\n    \&quot;createdAt\&quot;: \&quot;2021-10-25T12:19:27.278Z\&quot;,\n    \&quot;updatedAt\&quot;: \&quot;2021-10-25T12:20:17.356Z\&quot;\n  }\n}\n}\n\n```\n\n**Response for successful payout**\n\n``` json\n{\n   \&quot;event\&quot;:\&quot;payout.successful\&quot;,\n   \&quot;data\&quot;: {\n      \&quot;amountCharged\&quot;: 200000,\n      \&quot;amountReceived\&quot;: 1500\n      \&quot;fees\&quot;: 15,\n      \&quot;sourceCurrency\&quot;: \&quot;NGN\&quot;,\n      \&quot;destinationCurrency\&quot;: \&quot;GHS\&quot;,\n      \&quot;recipient\&quot;:  {\n        \&quot;name\&quot;: \&quot;Hassan Sarz\&quot;,\n        \&quot;accountNumber\&quot;: \&quot;0124775489\&quot;,\n        \&quot;type\&quot;: \&quot;individual\&quot;,\n        \&quot;email\&quot;: \&quot;aa@aa.com\&quot;,\n      },\n      \&quot;paymentScheme\&quot;: null,\n      \&quot;paymentDestination\&quot;: \&quot;bank_account\&quot;,\n      \&quot;rate\&quot;: 85\n      \&quot;status\&quot;: \&quot;successful\&quot;,\n      \&quot;createdAt\&quot;: \&quot;2021-03-02T17:00:31.742Z\&quot;,\n      \&quot;updatedAt\&quot;:\&quot;2021-03-02T17:00:31.742Z\&quot;,\n      \&quot;reference\&quot;: \&quot;7303c7fb-a487-4abb-9e80-a5be8722639a\&quot;\n    }\n}\n\n```\n\n**Response for failed payout**\n\n``` json\n{\n   \&quot;event\&quot;:\&quot;payout.failed\&quot;,\n   \&quot;data\&quot;: {\n      \&quot;amountCharged\&quot;: 200000,\n      \&quot;amountReceived\&quot;: 1500\n      \&quot;fees\&quot;: 15,\n      \&quot;sourceCurrency\&quot;: \&quot;NGN\&quot;,\n      \&quot;destinationCurrency\&quot;: \&quot;GHS\&quot;,\n      \&quot;recipient\&quot;:  {\n        \&quot;name\&quot;: \&quot;Hassan Sarz\&quot;,\n        \&quot;accountNumber\&quot;: \&quot;0124775489\&quot;,\n        \&quot;type\&quot;: \&quot;individual\&quot;,\n        \&quot;email\&quot;: \&quot;aa@aa.com\&quot;,\n      },\n      \&quot;paymentScheme\&quot;: null,\n      \&quot;paymentDestination\&quot;: \&quot;bank_account\&quot;,\n      \&quot;rate\&quot;: 85\n      \&quot;status\&quot;: \&quot;failed\&quot;,\n      \&quot;message\&quot;: \&quot;A reason for the failure\&quot;\n      \&quot;createdAt\&quot;: \&quot;2021-03-02T17:00:31.742Z\&quot;,\n      \&quot;updatedAt\&quot;:\&quot;2021-03-02T17:00:31.742Z\&quot;,\n      \&quot;reference\&quot;: \&quot;7303c7fb-a487-4abb-9e80-a5be8722639a\&quot;\n    }\n}\n\n```\n\n**Response for failed conversion**\n\n``` json\n{\n   \&quot;event\&quot;:\&quot;conversion.failed\&quot;,\n   \&quot;data\&quot;: {\n      \&quot;amountCharged\&quot;: 200000,\n      \&quot;amountReceived\&quot;: 1500\n      \&quot;fees\&quot;: 15,\n      \&quot;sourceCurrency\&quot;: \&quot;USD\&quot;,\n      \&quot;destinationCurrency\&quot;: \&quot;NGN\&quot;,\n      \&quot;rate\&quot;: 85\n      \&quot;settlement\&quot;: 5262gs767h828\n      \&quot;status\&quot;: \&quot;failed\&quot;,\n      \&quot;createdAt\&quot;: \&quot;2021-03-02T17:00:31.742Z\&quot;,\n      \&quot;updatedAt\&quot;:\&quot;2021-03-02T17:00:31.742Z\&quot;,\n      \&quot;reference\&quot;: \&quot;7303c7fb-a487-4abb-9e80-a5be8722639a\&quot;\n    }\n}\n\n```\n\n**Response for successful settlement**\n\n``` json\n{\n   \&quot;event\&quot;:\&quot;settlement.successful\&quot;,\n   \&quot;data\&quot;: {\n      \&quot;amount\&quot;: 15000000\n      \&quot;sourceCurrency\&quot;: \&quot;USD\&quot;,\n      \&quot;destinationCurrency\&quot;: \&quot;NGN\&quot;,\n      \&quot;recipient\&quot;:  {\n        \&quot;name\&quot;: \&quot;Hassan Sarz\&quot;,\n        \&quot;accountNumber\&quot;: \&quot;0124775489\&quot;,\n        \&quot;type\&quot;: \&quot;individual\&quot;,\n        \&quot;email\&quot;: \&quot;aa@aa.com\&quot;,\n      },\n      \&quot;settlementDestination\&quot;: \&quot;bank_account\&quot;,\n      \&quot;settlementTime\&quot;: \&quot;T+2\&quot;\n      \&quot;rate\&quot;: 480\n      \&quot;status\&quot;: \&quot;successful\&quot;,\n      \&quot;transactionType\&quot;: \&quot;collection\&quot;\n      \&quot;transaction\&quot;: \&quot;123rde2e3243\&quot;\n      \&quot;createdAt\&quot;: \&quot;2021-03-02T17:00:31.742Z\&quot;,\n      \&quot;updatedAt\&quot;:\&quot;2021-03-02T17:00:31.742Z\&quot;,\n      \&quot;settlementDate\&quot;: \&quot;2021-03-02T17:00:31.742Z\&quot;,\n      \&quot;settledAt\&quot;: \&quot;2021-03-02T17:00:31.742Z\&quot;\n      \&quot;reference\&quot;: \&quot;7303c7fb-a487-4abb-9e80-a5be8722639a\&quot;\n      \&quot;business\&quot;: 782y87e72982\n    }\n}\n\n```\n\n**Response for successful collection**\n\n``` json\n{\n  \&quot;event\&quot;: \&quot;collection.successful\&quot;,\n  \&quot;data\&quot;: {\n    \&quot;business\&quot;: \&quot;6065958518d58020f20b71f3\&quot;,\n    \&quot;_id\&quot;: \&quot;609853394ea00b5246086de4\&quot;,\n    \&quot;sourceCurrency\&quot;: \&quot;GBP\&quot;,\n    \&quot;destinationCurrency\&quot;: \&quot;GBP\&quot;,\n    \&quot;sourceAmount\&quot;: 210.55,\n    \&quot;destinationAmount\&quot;: 210.55,\n    \&quot;fee\&quot;: 0,\n    \&quot;customerName\&quot;: \&quot;Alan ross\&quot;,\n    \&quot;settlementDestination\&quot;: \&quot;fincra_wallet\&quot;,\n    \&quot;status\&quot;: \&quot;successful\&quot;,\n    \&quot;initiatedAt\&quot;: \&quot;2017-09-05T10:37:15.000Z\&quot;,\n    \&quot;createdAt\&quot;: \&quot;2021-05-09T21:25:13.393Z\&quot;,\n    \&quot;updatedAt\&quot;: \&quot;2021-05-09T22:06:29.201Z\&quot;,\n    \&quot;reference\&quot;: \&quot;4cbf9122-d272-47fa-8f09-39e538f6ed35\&quot;\n  }\n}\n\n```\n\nN.B: You should expect a POST request from us when we send you a webhook.\n\n* * *\n\n# Supported Currencies\n\nWe will breakdown the supported currencies into the transaction type(conversion, collection, disbursement) we support. They are:\n\n**Conversion:** The supported currencies for conversions can be broken down into:\n\n**Supported conversion source currency**\n\n| S/N | Currency Name | Currency Code |\n| --- | --- | --- |\n| 1 | United State Dollar | USD |\n| 2 | Euro | EUR |\n| 3 | Nigerian Naira | NGN |\n| 4 | British Pound | GBP |\n\n**Supported conversion destination currency**\n\n| S/N | Currency Name | Currency Code |\n| --- | --- | --- |\n| 1 | United State Dollar | USD |\n| 2 | Euro | EUR |\n| 3 | Nigerian Naira | NGN |\n| 4 | British Pound | GBP |\n\nTherefore this is the breakdown of the currency pairs we support\n\n``` json\n{\n    \&quot;currencyPairs\&quot;: [\n        \&quot;USD-NGN\&quot;,\n        \&quot;GBP-NGN\&quot;,\n        \&quot;EUR-NGN\&quot;,\n        \&quot;EUR-USD\&quot;,\n        \&quot;GBP-USD\&quot;,\n        \&quot;GBP-EUR\&quot;,\n    ]\n}\n\n```\n\n**Disbursement:** The supported currencies for disbursements(payouts) can be broken down into:\n\n**Supported disbursement source currency**\n\n| S/N | Currency Name | Currency Code | Payment Scheme(s) |\n| --- | --- | --- | --- |\n| 1 | United State Dollar | USD | SWIFT `Required` |\n| 2 | Euro | EUR | SEPA,SEPA_instant,SWIFT `Required` |\n| 3 | Nigerian Naira | NGN |  |\n| 4 | British Pound | GBP | FPS,CHAPS,SWIFT `Required` |\n\n**Note** : If destination currency is either USD,EUR,GBP a payment scheme is required\n\n**Supported disbursement destination currency**\n\n| S/N | Currency Name | Currency Code |\n| --- | --- | --- |\n| 1 | United State Dollar | USD |\n| 2 | Euro | EUR |\n| 3 | Nigerian Naira | NGN |\n| 4 | British Pound | GBP |
                         DESC

    s.platform     = :ios, '7.0'
    s.requires_arc = true

    s.framework    = 'SystemConfiguration'
    
    s.homepage     = "https://github.com/swagger-api/swagger-codegen"
    s.license      = "MIT"
    s.source       = { :git => "https://github.com/swagger-api/swagger-codegen.git", :tag => "#{s.version}" }
    s.author       = { "Swagger" => "apiteam@swagger.io" }

    s.source_files = 'SwaggerClient/**/*'
    s.public_header_files = 'SwaggerClient/**/*.h'

    s.dependency 'AFNetworking', '~> 2.3'
    s.dependency 'JSONModel', '~> 1.1'
    s.dependency 'ISO8601', '~> 0.3'
end

