#import <Foundation/Foundation.h>
#import "SWGObject.h"
#import "SWGApiClient.h"


/**
 * NOTE: This class is auto generated by the swagger code generator program. 
 * https://github.com/swagger-api/swagger-codegen 
 * Do not edit the class manually.
 */

@interface SWGProfileApi: NSObject

@property(nonatomic, assign)SWGApiClient *apiClient;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient;
-(void) addHeader:(NSString*)value forKey:(NSString*)key;
-(unsigned long) requestQueueSize;
+(SWGProfileApi*) apiWithHeader:(NSString*)headerValue key:(NSString*)key;
+(SWGProfileApi*) sharedAPI;
///
///
/// Get the Beneficiaries for a business
/// This endpoint provides the ability to retrieve a list of beneficiaries attached to a business. \n\n\nREQUEST BODY\n\n\n| Field | Data Type | Description |\n|------| ------------- | ----------- |\n| page | string | Specify exactly what page you want to retrieve optional|\n| perPage | string | Specify how many records you want to retrieve per page optional|
///
/// @param businessID This could be the ID of the business or the ID of a sub-account of the business
/// 
///
/// @return 
-(NSNumber*) gettheBeneficiariesforabusinessWithCompletionBlock :(NSString*) businessID 
    
    
    completionHandler: (void (^)(NSError* error))completionBlock;


///
///
/// Create a Beneficiary
/// This endpoint is used for creating a Beneficiary.  \n\n\n\n\nREQUEST BODY\n\n\n| Field | Data Type | Description |\n|------| ------------- | ----------- |\n| firstName | string | required|\n| lastName | string | optional|\n| email | string |The email address of Beneficiary. required |\n| phoneNumber | string | optional  |\n| accountHolderName | string | required|\n| bank | object | see the information about this below. optional + name: bank name required  + code optional   + sortCode optional   + swiftCode optional  + branch  optional   + address: see the definition in address field below optional   |\n| type | string | The value for this field is either _corporate_ or _indivdual_required|\n| address | object | the physical address of the beneficiary and it comprises of the below: optional + country optional  + state optional   + zip required   + city required  + street  required  |\n| currency | string | The currency that Beneficiary would be paid in required|\n| paymentDestination | string | The value for this field is either _mobile_money_wallet_ or _bank_account_ required |\n| destinationAddress | string | see the definition belowrequired |\n| uniqueIdentifier | string | optional |\n\n\nValue Description for the destinationAddress field\n\n\nThe table below show that a destination address should be when given a certain payment destination.\n\n| paymentDestination | destinationAddress |\n|------| ------------- |\n| _mobile_money_wallet_ | phone number used for the wallet |\n| _bank_account_ | account number |
///
/// @param businessID businessID
/// 
///
/// @return 
-(NSNumber*) createaBeneficiaryWithCompletionBlock :(NSString*) businessID 
    
    
    completionHandler: (void (^)(NSError* error))completionBlock;


///
///
/// Get a Beneficiary
/// This endpoint is used for retrieving a single beneficiary attached to a business.
///
/// @param businessID This could be the ID of the business or the ID of a sub-account of the business
/// @param beneficiaryID The reference or ID of the beneficiary
/// 
///
/// @return 
-(NSNumber*) getaBeneficiaryWithCompletionBlock :(NSString*) businessID 
     beneficiaryID:(NSString*) beneficiaryID 
    
    
    completionHandler: (void (^)(NSError* error))completionBlock;


///
///
/// Delete a Beneficiary
/// This endpoint is used for deleting a beneficiary.
///
/// @param businessID This could be the ID of the business or the ID of a sub-account of the business
/// @param beneficiaryID This is the beneficiary ID of the the benficiary
/// 
///
/// @return 
-(NSNumber*) deleteaBeneficiaryWithCompletionBlock :(NSString*) businessID 
     beneficiaryID:(NSString*) beneficiaryID 
    
    
    completionHandler: (void (^)(NSError* error))completionBlock;


///
///
/// Update a Beneficiary
/// This endpoint is used for updating the information for a beneficiary. \n\n\n\nREQUEST BODY\n\n\n| Field | Data Type | Description |\n|------| ------------- | ----------- |\n| firstName | string | required|\n| lastName | string | optional|\n| email | string |The email address of Beneficiary. required |\n| phoneNumber | string | optional  |\n| accountHolderName | string | optional|\n| bank | object | see the information about this below. optional + name: bank name required  + code optional   + sortCode optional   + swiftCode optional  + branch  optional   + address: see the definition in address field below optional   |\n| type | string | The value for this field is either _corporate_ or _indivdual_required|\n| address | object | the physical address of the beneficiary and it comprises of the below: optional + country optional  + state optional   + zip required   + city required  + street  required  |\n| currency | string | The currency that Beneficiary would be paid in required|\n| paymentDestination | string | The value for this field is either _mobile_money_wallet_ or _bank_account_ required |\n| destinationAddress | string | see the definition belowrequired |\n| uniqueIdentifier | string | optional |\n\n\n\nValue Description for the destinationAddress field\n\nThe table below show that a destination address should be when given a certain payment destination.\n\n| paymentDestination | destinationAddress |\n|------| ------------- |\n| _mobile_money_wallet_ | phone number used for the wallet |\n| _bank_account_ | account number |
///
/// @param businessID This could be the ID of the business or the ID of a sub-account of the business
/// @param beneficiaryID The reference or ID of the beneficiary
/// 
///
/// @return 
-(NSNumber*) updateaBeneficiaryWithCompletionBlock :(NSString*) businessID 
     beneficiaryID:(NSString*) beneficiaryID 
    
    
    completionHandler: (void (^)(NSError* error))completionBlock;


///
///
/// Get business Information
/// This endpoint is used for getting the information on the registered Merchant's business.
///
/// 
///
/// @return 
-(NSNumber*) getbusinessInformationWithCompletionBlock :
    
    (void (^)(NSError* error))completionBlock;


///
///
/// Get  All Sub-accounts
/// This endpoint is used to retrieve all subaccounts for a business.
///
/// @param businessId The ID of the business
/// 
///
/// @return 
-(NSNumber*) getAllSubAccountsWithCompletionBlock :(NSString*) businessId 
    
    
    completionHandler: (void (^)(NSError* error))completionBlock;


///
///
/// Create Subaccount
/// This endpoint helps you create a sub-account.\n\nREQUEST BODY\n\n\n| Field | Data Type | description |\n|------| ------------- | ----------- |\n| name | string | Customer's name|\n| email | string | Customer's email |\n| mobile | string | Customer's phone number |\n| country | string | Customer's country e.g NG  |
///
/// @param businessId The ID of the business
/// 
///
/// @return 
-(NSNumber*) createSubaccountWithCompletionBlock :(NSString*) businessId 
    
    
    completionHandler: (void (^)(NSError* error))completionBlock;


///
///
/// Get  One Subaccount
/// This endpoint is used in retrieving one subaccount.
///
/// @param businessId The ID of the business
/// @param subAccountId The ID of the subaccount
/// 
///
/// @return 
-(NSNumber*) getOneSubaccountWithCompletionBlock :(NSString*) businessId 
     subAccountId:(NSString*) subAccountId 
    
    
    completionHandler: (void (^)(NSError* error))completionBlock;


///
///
/// Update A Subaccount
/// This endpoint is used to update a subaccount.\n\nREQUEST BODY\n\n\n| Field | Data Type | description |\n|------| ------------- | ----------- |\n| name | string | Customer's name required|\n| email | string | Customer's email  required|\n| mobile | string | Customer's phone number  required|
///
/// @param businessId The ID of the business
/// @param subAccountId The ID of the subaccount
/// 
///
/// @return 
-(NSNumber*) updateASubaccountWithCompletionBlock :(NSString*) businessId 
     subAccountId:(NSString*) subAccountId 
    
    
    completionHandler: (void (^)(NSError* error))completionBlock;


///
///
/// Fetch Merchant Virtual Accounts
/// This endpoint fetches all virtual accounts belonging to a merchant\n\nREQUEST BODY\n\n* * *\n\n| Field | Data Type | Description |\n| --- | --- | --- |\n| page | string | Specify exactly what page you want to retrieve `required` |\n| perPage | string | Specify how many records you want to retrieve per page `required` |\n| filterBy | object | see note below `optional` |\n\nThe filterBy property is an object with the following attributes below that helps you filter accounts:\n\n*   status - `pending`, `approved` or `declined`\n*   currency - EUR or GBP\n*   accountType - corporate or individual
///
/// 
///
/// @return 
-(NSNumber*) fetchMerchantVirtualAccountsWithCompletionBlock :
    
    (void (^)(NSError* error))completionBlock;


///
///
/// Get   Subaccount  Virtual Accounts
/// This endpoint is used for retrieving the virtual accounts of your Subaccounts.\n\nREQUEST BODY\n\n* * *\n\n| Field | Data Type | Description |\n| --- | --- | --- |\n| page | string | Specify exactly what page you want to retrieve `required` |\n| perPage | string | Specify how many records you want to retrieve per page `required` |\n| filterBy | object | see note below `optional` |\n\nThe filterBy property is an object with the following attributes below that helps you filter accounts:\n\n*   status - `pending`, `approved` or `declined`\n*   currency - EUR or GBP\n*   accountType - corporate or individual
///
/// @param businessId The ID of the business
/// 
///
/// @return 
-(NSNumber*) getSubaccountVirtualAccountsWithCompletionBlock :(NSString*) businessId 
    
    
    completionHandler: (void (^)(NSError* error))completionBlock;


///
///
/// Request An EUR virtual Account  For A Subaccount
/// This endpoint is used for creating a virtual account for your customer/customers\n\n**Note**  \nThe first name and last name or business name of a virtual account should always match with the name of the Receiver specified when making payments to the Virtual account. Else such payments would be blocked. Therefore, kindly pass in the right details when requesting a virtual account.\n\nREQUEST BODY\n\n* * *\n\n| Field | Data type | Description |\n| --- | --- | --- |\n| currency | string | e.g EUR,GBP `required` |\n| accountType | string | The account type your customer wants. It should be either **individual** or **corporate** `required` |\n| KYCInformation | object | Verification of your customer Identity. See the tables below for KYC information for **Individual** and **Corporate** `required` |\n| meansOfId | file | Your means of identification from which should be a valid government ID e.g voters card, driving license .`Optional` for corporate virtual account . This should be a File Upload and not sent in Base64 format |\n| utilityBill | file | Electricity bills, water bills. `Optional` for corporate virtual account. This should be a File Upload and not sent in Base64 format |\n\n**Description of KYC Information Object for Individual**\n\n| Field | Data type | Description |\n| --- | --- | --- |\n| lastName | string | the last name of the individual `required` |\n| firstName | string | the first name of the individual `required` |\n| email | string | the email of the individual |\n| birthDate | dateFormat | YYYY-MM-DD `required` |\n| address | object | This contains all the required address information. They are:    \+ country: country of origin `required`  \+ zip `required`  \+ street `required`  \+ state `required`  \+ city `required` |\n| document | object | This contains the required information in your means of identification. They are:    \+ type: type of ID document e.g International Passport `required`  \+ number `required`  \+ issuedCountryCode e.g NG `required`  \+ issuedBy `required`  \+ issuedDate with Format \"YYYY-mm-dd\" `required`  \+ expirationDate with Format \"YYYY-mm-dd\" `optional` |\n| occupation | string | `required` |\n\n**Description of KYC Information Object for Corporate**\n\n| Field | Data type | Description |\n| --- | --- | --- |\n| businessName | string | `required` |\n| businessRegistrationNumber | string | `required` |\n| incorporationDate | string | `required` |\n| expectedInboundMonthlyTurnover | string | `required` |\n| website | string | `optional` |\n| email | string | `optional` |\n| address | string | This field is required and has the following fields:    \+ country: country of origin `required`  \+ zip `required`  \+ street `required`  \+ state `required`  \+ city `required` |\n| document | object | This field is required and has the following fields:    \+ type: type of ID document e.g International Passport `required`  \+ number `required`  \+ issuedCountryCode e.g NG `required`  \+ issuedBy `required`  \+ issuedDate with Format \"YYYY-mm-dd\" `required`  \+ expirationDate with Format \"YYYY-mm-dd\" `optional` |\n| ultimateBeneficialOwners | array of objects | This field is required and each object in it should contain the following fields:    \+ lastName `required`  \+ firstName `required`  \+ ownershipPercentage `required`  \+ politicallyExposedPerson `required` |\n| businessActivityDescription | string | `required` |\n| businessCategory | string | This is required for USD,GBP and EUR virtual accounts requests but `optional` for NGN e.g Government agencies, Joint Venture, Political parties |\n| additionalInfo | string | This is required for USD,GBP and EUR virtual account requests |\n| attachments | file | `optional` |
///
/// @param businessId The ID of the business
/// @param subAccountId The ID of the subaccount
/// 
///
/// @return 
-(NSNumber*) requestAnEURvirtualAccountForASubaccountWithCompletionBlock :(NSString*) businessId 
     subAccountId:(NSString*) subAccountId 
    
    
    completionHandler: (void (^)(NSError* error))completionBlock;


///
///
/// Get Virtual Account Requests
/// This endpoint is used for getting all virtual account requests tied to a merchant
///
/// 
///
/// @return 
-(NSNumber*) getVirtualAccountRequestsWithCompletionBlock :
    
    (void (^)(NSError* error))completionBlock;


///
///
/// Request A Virtual Account
/// This endpoint is used for requesting a single virtual account or multiple virtual accounts for the same currency.\n\nREQUEST BODY\n\n* * *\n\n| Field | Data Type | Description |\n| --- | --- | --- |\n| currency | string | e.g GBP, EUR `required` for all currencies |\n| reason | number | This is `optional` for NGN |\n| monthlyVolume | string | This is `optional` for NGN |\n| entityName | string | This is `optional` for NGN |\n| KYCInformation | object | This is `optional` for NGN |\n\n**Description of KYC Information Object**\n\n| Field | Data type | Description |\n| --- | --- | --- |\n| businessCategory | string | `required` |\n| additionalInfo | string | `required` |
///
/// 
///
/// @return 
-(NSNumber*) requestAVirtualAccountWithCompletionBlock :
    
    (void (^)(NSError* error))completionBlock;


///
///
/// Get One Virtual Account
/// This endpoint is used for retreiving a virtual account attached to a merchant
///
/// @param virtualAccountId The Id of the virtual account you want to retrieve
/// 
///
/// @return 
-(NSNumber*) getOneVirtualAccountWithCompletionBlock :(NSString*) virtualAccountId 
    
    
    completionHandler: (void (^)(NSError* error))completionBlock;



@end
